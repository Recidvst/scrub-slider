{"mappings":"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","sources":["dist/Scrub.min.js","dist/scrub.js"],"sourcesContent":[null,"/* Scrub Slider */\n\n// helper functions\n// object test\nvar isObject = function(a) {\n    return (!!a) && (a.constructor === Object);\n};\n// debounce (thanks to Underscore)\nfunction debounce(func, wait, immediate) {\n    var timeout;\n    return function() {\n        var context = this, args = arguments;\n        var later = function() {\n            timeout = null;\n            if (!immediate) func.apply(context, args);\n        };\n        var callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow) func.apply(context, args);\n    };\n};\n\nfunction Scrub(scrubArg) {\n\n    // check if simple call or config passed\n    if ( isObject(scrubArg) || typeof scrubArg == 'object' ) {\n        // set function default arguments\n          scrubArg.target = ( typeof scrubArg.target !== 'undefined' && (isObject(scrubArg) || typeof scrubArg == 'object' ) ) ? scrubArg.target : null;\n          scrubArg.height = ( typeof scrubArg.height !== 'undefined' && (isObject(scrubArg) || typeof scrubArg == 'object' ) ) ? scrubArg.height : '500px';\n          scrubArg.handle = ( typeof scrubArg.handle !== 'undefined' && (isObject(scrubArg) || typeof scrubArg == 'object' ) ) ? scrubArg.handle : true;\n          scrubArg.src = ( typeof scrubArg.src !== 'undefined' && (isObject(scrubArg) || typeof scrubArg == 'object' ) ) ? scrubArg.src : null;\n          scrubArg.alt = ( typeof scrubArg.alt !== 'undefined' && (isObject(scrubArg) || typeof scrubArg == 'object' ) ) ? scrubArg.alt : null;\n\n        ScrubInitiate();\n    }\n    else {\n        ScrubInitiate();\n    }\n\nfunction ScrubInitiate() {\n    // get chosen slider container\n    var scrubSlider = ( isObject(scrubArg) || typeof scrubArg == 'object' ) ? document.querySelectorAll(scrubArg.target)[0] : document.querySelectorAll(scrubArg)[0] ;\n\n    try {\n        function utilityFn(callback) {\n\n          // avoid non-specific classes..\n          var scrubName = ( isObject(scrubArg) || typeof scrubArg == 'object' ) ? (scrubArg.target) : scrubArg;\n          scrubName = scrubName.replace(\"#\", \"\");\n          scrubName = scrubName.replace(\".\", \"\");\n          if ( scrubName.indexOf('.') > -1 && document.querySelectorAll(scrubName).length > 1 ) {\n            console.warn('%cScrub Slider works best if you use an %cID%c or a %cunique%c class... ','color:cornflowerblue;','color:indianred;','color:cornflowerblue;','color:indianred;','color:cornflowerblue;');\n          }\n\n            if ( scrubSlider != undefined ) {\n              scrubSlider.className += \" scrub-slider\";\n              var sliderWidth = scrubSlider.offsetWidth;\n              // set height if given\n              if ( scrubArg.height != null ) {\n                scrubSlider.style.height = scrubArg.height;\n              }\n\n                // get chosen slider's images\n                var scrubChildren = scrubSlider.children;\n\n                function createScrubImages(el,type,index) {\n                    if ( type == 'DIV' ) {\n                       // clone div\n                       var scrubImage = el.cloneNode(true);\n                       el.parentNode.removeChild(el);\n                       // inject scrub container\n                       var scrubCont = document.createElement('div');\n                       scrubCont.className = ( index == 0 ) ? \"scrub-content scrub-left\" : \"scrub-content scrub-right\";\n                       scrubCont.style.width = parseInt(sliderWidth / 2) + \"px\";\n                       scrubSlider.insertBefore(scrubCont,scrubSlider.firstChild);\n                       // re-attach div\n                       scrubImage.style.width = sliderWidth + \"px\";\n                           // if alt specified manually\n                           if ( scrubArg.alt != null ) {\n                               scrubImage.setAttribute('alt', ( ( index == 0 ) ? scrubArg.alt[0] : scrubArg.alt[1] ) )\n                           }\n                            // if src specified manually\n                            if ( scrubArg.src != null ) {\n                                var imgSrc = ( index == 0 ) ? scrubArg.src[0] : scrubArg.src[1] ;\n                                scrubImage.style.backgroundImage = 'url(' + imgSrc + ')';\n                            }\n                       scrubCont.appendChild(scrubImage);\n                       // need a background image..\n                       if ( el.style.backgroundImage == '' ) {\n                        console.warn('%cScrub Slider divs must have a %cbackground image to work!%c >:[','color:cornflowerblue;','color:indianred;','color:cornflowerblue;');\n                       }\n\n                       // handle resize\n                       var reziseFn = debounce(function(scrubImage) {\n                           var newSliderWidth = scrubSlider.offsetWidth;\n                           scrubCont.style.width = parseInt(newSliderWidth / 2) + \"px\";\n                           scrubImage.style.width = newSliderWidth + \"px\";\n                       }, 500);\n                       window.addEventListener('resize', function(e) {\n                           reziseFn(scrubImage);\n                       });\n\n                    }\n                    else if ( type == 'IMG' ) {\n                       // clone div\n                       var scrubImage = document.createElement('div');\n                       var imgSrc = el.getAttribute('src');\n                            // if src specified manually\n                            if ( scrubArg.src != null ) {\n                                imgSrc = ( index == 0 ) ? scrubArg.src[0] : scrubArg.src[1] ;\n                            }\n                       el.parentNode.removeChild(el);\n                       // inject scrub container\n                       var scrubCont = document.createElement('div');\n                       scrubCont.className = ( index == 0 ) ? \"scrub-content scrub-left\" : \"scrub-content scrub-right\";\n                       scrubCont.style.width = parseInt(sliderWidth / 2) + \"px\";\n                           // if alt specified\n                           if ( scrubArg.alt != null ) {\n                               scrubImage.setAttribute('alt', ( ( index == 0 ) ? scrubArg.alt[0] : scrubArg.alt[1] ) )\n                           }\n                       scrubSlider.insertBefore(scrubCont,scrubSlider.firstChild);\n                       // re-attach div\n                       scrubImage.style.width = sliderWidth + \"px\";\n                       scrubImage.style.backgroundImage = 'url(' + imgSrc + ')';\n                       scrubCont.appendChild(scrubImage);\n\n                       // handle resize\n                       var reziseFn = debounce(function(scrubImage) {\n                           var newSliderWidth = scrubSlider.offsetWidth;\n                           scrubCont.style.width = parseInt(newSliderWidth / 2) + \"px\";\n                           scrubImage.style.width = newSliderWidth + \"px\";\n                       }, 500);\n                       window.addEventListener('resize', function(e) {\n                           reziseFn(scrubImage);\n                       });\n\n                    }\n                }\n                for(var i=0; i < 2; i++) {\n                  var child = scrubChildren[i];\n                  if ( scrubChildren[i] && child.tagName ) {\n                    createScrubImages( scrubChildren[i], child.tagName, i );\n                  }\n                }\n\n            callback(scrubSlider);\n            }\n            else {\n                console.warn('%cScrub Slider needs to be passed an appropriate selector %c- preferably an ID, but a specific, unique class works too.','color:cornflowerblue;','color:indianred;');\n            }\n        }\n\n            utilityFn(function(scrubSlider) {\n                // add scrub control/handle\n                var scrubHandle = document.createElement('div');\n                scrubHandle.className= \"sliding handleOn \";\n                scrubHandle.innerHTML = '<span class=\"sliding-left\"></span><span class=\"sliding-right\"></span>';\n                scrubSlider.appendChild(scrubHandle);\n\n                // remove handle if specified\n                if ( scrubArg.handle == false ) {\n                    scrubHandle.innerHTML = '';\n                    scrubHandle.classList.remove('handleOn');\n                }\n\n                // scrub slider main action fn\n                var mover = debounce(function(pos,full,slider) {\n                    if ( scrubHandle ) {\n                        var shrink = full - pos;\n                        var sliding = slider.querySelectorAll('.sliding');\n                           sliding[0].style.left = ((pos > 0) ? pos : 0) + \"px\";\n                        var contentLeft = slider.querySelectorAll('.scrub-left');\n                           contentLeft[0].style.width = ((pos > 0) ? pos : 0) + \"px\";\n                        var contentRight = slider.querySelectorAll('.scrub-right');\n                           contentRight[0].style.width = ((shrink > 0) ? shrink : 0) + \"px\";\n                    }\n                }, 1);\n                // add mousemove listener\n                scrubSlider.addEventListener('mousemove', function(e) {\n                  var mousePosition = e.clientX - this.offsetLeft;\n                  var fullWidth = scrubSlider.offsetWidth;\n                  mover(mousePosition,fullWidth,scrubSlider);\n                });\n            });\n    }catch(e){\n        console.trace('%cuh-oh: %c' + e + '','color:indianred;','color:cornflowerblue;');\n    }\n}\n}\n"],"names":["debounce","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","Scrub","scrubArg","ScrubInitiate","scrubSlider","isObject","document","querySelectorAll","target","callback","scrubName","replace","indexOf","length","console","warn","undefined","className","sliderWidth","offsetWidth","height","style","scrubChildren","children","i","child","tagName","el","type","index","scrubImage","cloneNode","parentNode","removeChild","scrubCont","createElement","width","parseInt","insertBefore","firstChild","alt","setAttribute","src","imgSrc","backgroundImage","appendChild","reziseFn","newSliderWidth","window","addEventListener","e","getAttribute","scrubHandle","innerHTML","handle","classList","remove","mover","pos","full","slider","shrink","left","mousePosition","clientX","offsetLeft","fullWidth","trace","a","constructor","Object"],"version":3,"file":"index.a582bcd0.js.map","sourceRoot":"/__parcel_source_root/"}